extern crate block_cipher_trait;
extern crate chacha20;
extern crate stream_cipher;

#[cfg(features = "xchacha20")]
use block_cipher_trait::generic_array::GenericArray;
#[cfg(features = "xchacha20")]
use chacha20::XChaCha20;
#[cfg(features = "xchacha20")]
use stream_cipher::{NewStreamCipher, StreamCipher};

//
// XChaCha20 test vectors from:
// <https://tools.ietf.org/id/draft-arciszewski-xchacha-03.html#rfc.appendix.A.3.2>
//

#[cfg(features = "xchacha20")]
const KEY: [u8; 32] = [
    0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f,
    0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f,
];

#[cfg(features = "xchacha20")]
const IV: [u8; 24] = [
    0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x4f,
    0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x58,
];

#[cfg(features = "xchacha20")]
const PLAINTEXT: [u8; 304] = [
    0x54, 0x68, 0x65, 0x20, 0x64, 0x68, 0x6f, 0x6c, 0x65, 0x20, 0x28, 0x70, 0x72, 0x6f, 0x6e, 0x6f,
    0x75, 0x6e, 0x63, 0x65, 0x64, 0x20, 0x22, 0x64, 0x6f, 0x6c, 0x65, 0x22, 0x29, 0x20, 0x69, 0x73,
    0x20, 0x61, 0x6c, 0x73, 0x6f, 0x20, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x20, 0x61, 0x73, 0x20, 0x74,
    0x68, 0x65, 0x20, 0x41, 0x73, 0x69, 0x61, 0x74, 0x69, 0x63, 0x20, 0x77, 0x69, 0x6c, 0x64, 0x20,
    0x64, 0x6f, 0x67, 0x2c, 0x20, 0x72, 0x65, 0x64, 0x20, 0x64, 0x6f, 0x67, 0x2c, 0x20, 0x61, 0x6e,
    0x64, 0x20, 0x77, 0x68, 0x69, 0x73, 0x74, 0x6c, 0x69, 0x6e, 0x67, 0x20, 0x64, 0x6f, 0x67, 0x2e,
    0x20, 0x49, 0x74, 0x20, 0x69, 0x73, 0x20, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x20, 0x74, 0x68, 0x65,
    0x20, 0x73, 0x69, 0x7a, 0x65, 0x20, 0x6f, 0x66, 0x20, 0x61, 0x20, 0x47, 0x65, 0x72, 0x6d, 0x61,
    0x6e, 0x20, 0x73, 0x68, 0x65, 0x70, 0x68, 0x65, 0x72, 0x64, 0x20, 0x62, 0x75, 0x74, 0x20, 0x6c,
    0x6f, 0x6f, 0x6b, 0x73, 0x20, 0x6d, 0x6f, 0x72, 0x65, 0x20, 0x6c, 0x69, 0x6b, 0x65, 0x20, 0x61,
    0x20, 0x6c, 0x6f, 0x6e, 0x67, 0x2d, 0x6c, 0x65, 0x67, 0x67, 0x65, 0x64, 0x20, 0x66, 0x6f, 0x78,
    0x2e, 0x20, 0x54, 0x68, 0x69, 0x73, 0x20, 0x68, 0x69, 0x67, 0x68, 0x6c, 0x79, 0x20, 0x65, 0x6c,
    0x75, 0x73, 0x69, 0x76, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x65,
    0x64, 0x20, 0x6a, 0x75, 0x6d, 0x70, 0x65, 0x72, 0x20, 0x69, 0x73, 0x20, 0x63, 0x6c, 0x61, 0x73,
    0x73, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, 0x77, 0x6f, 0x6c, 0x76,
    0x65, 0x73, 0x2c, 0x20, 0x63, 0x6f, 0x79, 0x6f, 0x74, 0x65, 0x73, 0x2c, 0x20, 0x6a, 0x61, 0x63,
    0x6b, 0x61, 0x6c, 0x73, 0x2c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x66, 0x6f, 0x78, 0x65, 0x73, 0x20,
    0x69, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x63,
    0x20, 0x66, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x20, 0x43, 0x61, 0x6e, 0x69, 0x64, 0x61, 0x65, 0x2e,
];

#[cfg(features = "xchacha20")]
const KEYSTREAM: [u8; 304] = [
    0x29, 0x62, 0x4b, 0x4b, 0x1b, 0x14, 0x0a, 0xce, 0x53, 0x74, 0x0e, 0x40, 0x5b, 0x21, 0x68, 0x54,
    0x0f, 0xd7, 0xd6, 0x30, 0xc1, 0xf5, 0x36, 0xfe, 0xcd, 0x72, 0x2f, 0xc3, 0xcd, 0xdb, 0xa7, 0xf4,
    0xcc, 0xa9, 0x8c, 0xf9, 0xe4, 0x7e, 0x5e, 0x64, 0xd1, 0x15, 0x45, 0x0f, 0x9b, 0x12, 0x5b, 0x54,
    0x44, 0x9f, 0xf7, 0x61, 0x41, 0xca, 0x62, 0x0a, 0x1f, 0x9c, 0xfc, 0xab, 0x2a, 0x1a, 0x8a, 0x25,
    0x5e, 0x76, 0x6a, 0x52, 0x66, 0xb8, 0x78, 0x84, 0x61, 0x20, 0xea, 0x64, 0xad, 0x99, 0xaa, 0x47,
    0x94, 0x71, 0xe6, 0x3b, 0xef, 0xcb, 0xd3, 0x7c, 0xd1, 0xc2, 0x2a, 0x22, 0x1f, 0xe4, 0x62, 0x21,
    0x5c, 0xf3, 0x2c, 0x74, 0x89, 0x5b, 0xf5, 0x05, 0x86, 0x3c, 0xcd, 0xdd, 0x48, 0xf6, 0x29, 0x16,
    0xdc, 0x65, 0x21, 0xf1, 0xec, 0x50, 0xa5, 0xae, 0x08, 0x90, 0x3a, 0xa2, 0x59, 0xd9, 0xbf, 0x60,
    0x7c, 0xd8, 0x02, 0x6f, 0xba, 0x54, 0x86, 0x04, 0xf1, 0xb6, 0x07, 0x2d, 0x91, 0xbc, 0x91, 0x24,
    0x3a, 0x5b, 0x84, 0x5f, 0x7f, 0xd1, 0x71, 0xb0, 0x2e, 0xdc, 0x5a, 0x0a, 0x84, 0xcf, 0x28, 0xdd,
    0x24, 0x11, 0x46, 0xbc, 0x37, 0x6e, 0x3f, 0x48, 0xdf, 0x5e, 0x7f, 0xee, 0x1d, 0x11, 0x04, 0x8c,
    0x19, 0x0a, 0x3d, 0x3d, 0xeb, 0x0f, 0xeb, 0x64, 0xb4, 0x2d, 0x9c, 0x6f, 0xde, 0xee, 0x29, 0x0f,
    0xa0, 0xe6, 0xae, 0x2c, 0x26, 0xc0, 0x24, 0x9e, 0xa8, 0xc1, 0x81, 0xf7, 0xe2, 0xff, 0xd1, 0x00,
    0xcb, 0xe5, 0xfd, 0x3c, 0x4f, 0x82, 0x71, 0xd6, 0x2b, 0x15, 0x33, 0x0c, 0xb8, 0xfd, 0xcf, 0x00,
    0xb3, 0xdf, 0x50, 0x7c, 0xa8, 0xc9, 0x24, 0xf7, 0x01, 0x7b, 0x7e, 0x71, 0x2d, 0x15, 0xa2, 0xeb,
    0x5c, 0x50, 0x48, 0x44, 0x51, 0xe5, 0x4e, 0x1b, 0x4b, 0x99, 0x5b, 0xd8, 0xfd, 0xd9, 0x45, 0x97,
    0xbb, 0x94, 0xd7, 0xaf, 0x0b, 0x2c, 0x04, 0xdf, 0x10, 0xba, 0x08, 0x90, 0x89, 0x9e, 0xd9, 0x29,
    0x3a, 0x0f, 0x55, 0xb8, 0xba, 0xfa, 0x99, 0x92, 0x64, 0x03, 0x5f, 0x1d, 0x4f, 0xbe, 0x7f, 0xe0,
    0xaa, 0xfa, 0x10, 0x9a, 0x62, 0x37, 0x20, 0x27, 0xe5, 0x0e, 0x10, 0xcd, 0xfe, 0xcc, 0xa1, 0x27,
];

#[cfg(features = "xchacha20")]
const CIPHERTEXT: [u8; 304] = [
    0x7d, 0x0a, 0x2e, 0x6b, 0x7f, 0x7c, 0x65, 0xa2, 0x36, 0x54, 0x26, 0x30, 0x29, 0x4e, 0x06, 0x3b,
    0x7a, 0xb9, 0xb5, 0x55, 0xa5, 0xd5, 0x14, 0x9a, 0xa2, 0x1e, 0x4a, 0xe1, 0xe4, 0xfb, 0xce, 0x87,
    0xec, 0xc8, 0xe0, 0x8a, 0x8b, 0x5e, 0x35, 0x0a, 0xbe, 0x62, 0x2b, 0x2f, 0xfa, 0x61, 0x7b, 0x20,
    0x2c, 0xfa, 0xd7, 0x20, 0x32, 0xa3, 0x03, 0x7e, 0x76, 0xff, 0xdc, 0xdc, 0x43, 0x76, 0xee, 0x05,
    0x3a, 0x19, 0x0d, 0x7e, 0x46, 0xca, 0x1d, 0xe0, 0x41, 0x44, 0x85, 0x03, 0x81, 0xb9, 0xcb, 0x29,
    0xf0, 0x51, 0x91, 0x53, 0x86, 0xb8, 0xa7, 0x10, 0xb8, 0xac, 0x4d, 0x02, 0x7b, 0x8b, 0x05, 0x0f,
    0x7c, 0xba, 0x58, 0x54, 0xe0, 0x28, 0xd5, 0x64, 0xe4, 0x53, 0xb8, 0xa9, 0x68, 0x82, 0x41, 0x73,
    0xfc, 0x16, 0x48, 0x8b, 0x89, 0x70, 0xca, 0xc8, 0x28, 0xf1, 0x1a, 0xe5, 0x3c, 0xab, 0xd2, 0x01,
    0x12, 0xf8, 0x71, 0x07, 0xdf, 0x24, 0xee, 0x61, 0x83, 0xd2, 0x27, 0x4f, 0xe4, 0xc8, 0xb1, 0x48,
    0x55, 0x34, 0xef, 0x2c, 0x5f, 0xbc, 0x1e, 0xc2, 0x4b, 0xfc, 0x36, 0x63, 0xef, 0xaa, 0x08, 0xbc,
    0x04, 0x7d, 0x29, 0xd2, 0x50, 0x43, 0x53, 0x2d, 0xb8, 0x39, 0x1a, 0x8a, 0x3d, 0x77, 0x6b, 0xf4,
    0x37, 0x2a, 0x69, 0x55, 0x82, 0x7c, 0xcb, 0x0c, 0xdd, 0x4a, 0xf4, 0x03, 0xa7, 0xce, 0x4c, 0x63,
    0xd5, 0x95, 0xc7, 0x5a, 0x43, 0xe0, 0x45, 0xf0, 0xcc, 0xe1, 0xf2, 0x9c, 0x8b, 0x93, 0xbd, 0x65,
    0xaf, 0xc5, 0x97, 0x49, 0x22, 0xf2, 0x14, 0xa4, 0x0b, 0x7c, 0x40, 0x2c, 0xdb, 0x91, 0xae, 0x73,
    0xc0, 0xb6, 0x36, 0x15, 0xcd, 0xad, 0x04, 0x80, 0x68, 0x0f, 0x16, 0x51, 0x5a, 0x7a, 0xce, 0x9d,
    0x39, 0x23, 0x64, 0x64, 0x32, 0x8a, 0x37, 0x74, 0x3f, 0xfc, 0x28, 0xf4, 0xdd, 0xb3, 0x24, 0xf4,
    0xd0, 0xf5, 0xbb, 0xdc, 0x27, 0x0c, 0x65, 0xb1, 0x74, 0x9a, 0x6e, 0xff, 0xf1, 0xfb, 0xaa, 0x09,
    0x53, 0x61, 0x75, 0xcc, 0xd2, 0x9f, 0xb9, 0xe6, 0x05, 0x7b, 0x30, 0x73, 0x20, 0xd3, 0x16, 0x83,
    0x8a, 0x9c, 0x71, 0xf7, 0x0b, 0x5b, 0x59, 0x07, 0xa6, 0x6f, 0x7e, 0xa4, 0x9a, 0xad, 0xc4, 0x09,
];

#[cfg(features = "xchacha20")]
#[test]
fn xchacha20_keystream() {
    let mut cipher = XChaCha20::new(&GenericArray::from(KEY), &GenericArray::from(IV));

    // The test vectors omit the first 64-bytes of the keystream
    let mut prefix = [0u8; 64];
    cipher.encrypt(&mut prefix);

    let mut buf = [0u8; 304];
    cipher.encrypt(&mut buf);
    assert_eq!(&buf[..], &KEYSTREAM[..]);
}

#[cfg(features = "xchacha20")]
#[test]
fn xchacha20_encryption() {
    let mut cipher = XChaCha20::new(&GenericArray::from(KEY), &GenericArray::from(IV));
    let mut buf = PLAINTEXT.clone();

    // The test vectors omit the first 64-bytes of the keystream
    let mut prefix = [0u8; 64];
    cipher.encrypt(&mut prefix);

    cipher.encrypt(&mut buf);
    assert_eq!(&buf[..], &CIPHERTEXT[..]);
}
